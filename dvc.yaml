stages:
  prepare_environment:
    cmd:
      - pre-commit install
      - black .
      - isort .

  run_tests:
    cmd: python -m unittest discover

  download_images:
    cmd: python src/stages/download_images.py
    outs:
      - data/pet_images
      - data/text_info/classes.csv
  split_data:
    cmd: python src/stages/split_data.py
    deps:
      - data/text_info/classes.csv
    outs:
      - "data/text_info/train.csv"
      - "data/text_info/val.csv"
      - "data/text_info/test.csv"
    params:
      - data
  convert_images_to_h5:
    cmd: python src/stages/convert_images_to_hdf5.py
    deps:
      - data/pet_images
      - "data/text_info/train.csv"
      - "data/text_info/val.csv"
      - "data/text_info/test.csv"
    outs:
      - "data/datasets/train.hdf5"
      - "data/datasets/val.hdf5"
      - "data/datasets/test.hdf5"
  train_model:
    cmd: python src/stages/train_model.py
    deps:
      - "data/datasets/train.hdf5"
      - "data/datasets/val.hdf5"
      - "data/datasets/test.hdf5"
      - "src/stages/train_model.py"
    outs:
      - "output/model"
      - "output/tensorboard/latest"
    params:
      - trainer
      - model
      - augmentations
    metrics:
      - output/val_metrics.json

  visualize:
    cmd: python src/stages/visualize_predictions.py
    deps:
      - "output/model"
      - "data/datasets/test.hdf5"
    outs:
      - "data/test_visualization.png"

  export_onnx:
    cmd: python src/stages/export_model_to_onnx.py
    deps:
      - "output/model"
    outs:
      - "output/model.onnx"

  upload_files:
    cmd: python src/stages/upload_files.py
    deps:
      - "output/model"
      - "output/tensorboard/latest"
      - "data/test_visualization.png"
      - "output/model.onnx"
    params:
      - cloud_storage
